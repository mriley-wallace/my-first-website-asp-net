// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace WebsiteCreation.Components
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\midge\Desktop\The Range Recruitment\WebsiteCreation\WebsiteCreation\Components\GameList.razor"
using WebsiteCreation.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\midge\Desktop\The Range Recruitment\WebsiteCreation\WebsiteCreation\Components\GameList.razor"
using WebsiteCreation.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\midge\Desktop\The Range Recruitment\WebsiteCreation\WebsiteCreation\Components\GameList.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
    public partial class GameList : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 74 "C:\Users\midge\Desktop\The Range Recruitment\WebsiteCreation\WebsiteCreation\Components\GameList.razor"
  Title_List selectedGame;
            string selectedGameId;

            void SelectGame(string gameId)
            {
                selectedGameId = gameId;
                selectedGame = GameService.GetGames().First(x => x.Id == gameId);
                GetCurrentRating();
            }

            int currentRating = 0;
            int voteCount = 0;
            string voteLabel;

            void GetCurrentRating()
            {
                if (selectedGame?.Ratings == null)
                {
                    currentRating = 0;
                    voteCount = 0;
                }
                else
                {
                    voteCount = selectedGame.Ratings.Count();
                    voteLabel = voteCount > 1 ? "Votes" : "Vote";
                    currentRating = selectedGame.Ratings.Sum() / voteCount;
                }

                System.Console.WriteLine($"Current rating for {selectedGame?.Id}: {currentRating}");
            }

            void SubmitRating(int rating)
            {
                System.Console.WriteLine($"Rating received for {selectedGame?.Id}: {rating}");
                if (selectedGameId == null)
                    return;
                GameService.AddRating(selectedGameId, rating);
                SelectGame(selectedGameId);
            } 
    

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private JsonFileGTController GameService { get; set; }
    }
}
#pragma warning restore 1591
